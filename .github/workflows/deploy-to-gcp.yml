name: Deploy to Google Cloud Run

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  PROJECT_ID: syntharacare
  SERVICE_NAME: syntharacare-api
  REGION: us-central1
  IMAGE_NAME: gcr.io/syntharacare/syntharacare-api

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm install
          cd server && npm install
          cd ../client && npm install

      - name: Build client
        run: |
          cd client && CI=false npm run build

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker

      - name: Build and push Docker image
        run: |
          gcloud builds submit --tag ${{ env.IMAGE_NAME }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.IMAGE_NAME }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --port 8080 \
            --memory 1Gi \
            --cpu 1 \
            --max-instances 10 \
            --service-account syntharacare-run@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
            --set-env-vars NODE_ENV=production \
            --set-env-vars MONGODB_URI="${{ secrets.MONGODB_URI }}" \
            --set-env-vars JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            --set-secrets GCS_CREDENTIALS=GCS_CREDENTIALS:latest \
            --set-env-vars GCS_PROJECT_ID=${{ env.PROJECT_ID }} \
            --set-env-vars GCS_BUCKET_NAME=syntharauibucket

      - name: Show service URL
        run: |
          gcloud run services describe ${{ env.SERVICE_NAME }} --region=${{ env.REGION }} --format="value(status.url)"
